-- # 1023Table #
-- DROP database paperless;
-- create database paperless;
-- use paperless;

-- 1. Scheduler 테이블 삭제
DROP TABLE IF EXISTS `Scheduler`;

-- 2. Recipient 테이블 삭제
DROP TABLE IF EXISTS `Recipient`;

-- 3. Reference 테이블 삭제
DROP TABLE IF EXISTS `Reference`;

-- 4. Approver 테이블 삭제
DROP TABLE IF EXISTS `Approver`;

-- 5. Attachment 테이블 삭제
DROP TABLE IF EXISTS `Attachment`;

-- 6. Report 테이블 삭제
DROP TABLE IF EXISTS `PurchaseReport`;

-- 7. Report 테이블 삭제
DROP TABLE IF EXISTS `AttendanceReport`;

-- 8. Report 테이블 삭제
DROP TABLE IF EXISTS `WorkReport`;

-- 9. Inquiry 테이블 삭제
DROP TABLE IF EXISTS `Inquiry`;

-- 10. Stock 테이블 삭제
DROP TABLE IF EXISTS `Stock`;

-- 11. Emailmessage 테이블 삭제
DROP TABLE IF EXISTS `Emailmessage`;

-- 12. Employee 테이블 삭제
DROP TABLE IF EXISTS `Employee`;

-- 13. Position 테이블 삭제
DROP TABLE IF EXISTS `Position`;

-- 14. Department 테이블 삭제
DROP TABLE IF EXISTS `Department`;

-- 15. Company 테이블 삭제
DROP TABLE IF EXISTS `Company`;


-- 1. Company 테이블 생성 (기업 정보)
CREATE TABLE `Company` (
	`comp_no`	BIGINT	NOT NULL,
	`comp_name`	varchar(300)	NOT NULL,
	`comp_industry`	varchar(100)	NOT NULL,
	`comp_requester`	varchar(100)	NOT NULL	COMMENT '담당자',
	`comp_email`	varchar(300)	NOT NULL	COMMENT '담당자 이메일',
	`comp_phone`	varchar(100)	NOT NULL	COMMENT '담당자 번호',
	`comp_headcount`	INT	NOT NULL	DEFAULT 0	COMMENT '예상 인원 수',
	PRIMARY KEY (`comp_no`)
);

-- 2. Department 테이블 생성 (부서 정보)
CREATE TABLE `Department` (
	`dept_no`	BIGINT	NOT NULL	COMMENT '100: 인사부, 200: 재무부',
	`dept_name`	varchar(100)	NOT NULL,
	`dept_team_name`	varchar(100)	NOT NULL,
	PRIMARY KEY (`dept_no`)
);

-- 3. Position 테이블 생성 (직급 정보)
CREATE TABLE `Position` (
	`posi_no`	BIGINT	NOT NULL,
	`posi_name`	varchar(100)	NOT NULL,
	PRIMARY KEY (`posi_no`)
);

-- 4. Employee 테이블 생성 (직원 정보)
CREATE TABLE `Employee` (
	`emp_no`	BIGINT	NOT NULL,
	`emp_code`	varchar(100)	NOT NULL,
	`emp_pw`	varchar(100)	NOT NULL,
	`emp_name`	varchar(100)	NOT NULL,
	`emp_email`	varchar(300)	NOT NULL,
	`emp_phone`	varchar(100)	NOT NULL,
	`emp_sign`	varchar(100)	NULL,
	`emp_profile`	varchar(300)	NULL,
	`emp_comp_no`	BIGINT	NOT NULL	COMMENT 'comp_no',
	`emp_dept_no`	BIGINT	NOT NULL	COMMENT 'dept_no',
	`emp_posi_no`	BIGINT	NOT NULL	COMMENT 'posi_no',
	`emp_enroll_date`	TIMESTAMP	NOT NULL	DEFAULT NOW(),
	`emp_join_date`	TIMESTAMP	NOT NULL,
	`emp_lastmsg`	varchar(100)	NULL,
	`emp_lastemailmsg`	varchar(100)	NULL,
	`emp_role`	varchar(100)	NOT NULL	DEFAULT 'user'	COMMENT 'sys_admin, comp_admin, user',
	PRIMARY KEY (`emp_no`),
	FOREIGN KEY (`emp_comp_no`) REFERENCES `Company` (`comp_no`),
	FOREIGN KEY (`emp_dept_no`) REFERENCES `Department` (`dept_no`),
	FOREIGN KEY (`emp_posi_no`) REFERENCES `Position` (`posi_no`)
);

-- 5. Report 테이블 생성 (보고서)
-- CREATE TABLE `Report` (
-- 	`repo_no`	BIGINT	NOT NULL,
-- 	`repo_emp_no`	BIGINT	NOT NULL	COMMENT 'emp_no',
-- 	`repo_title`	varchar(300)	NOT NULL,
-- 	`repo_content`	varchar(500)	NOT NULL,
-- 	`repo_type`	varchar(100)	NOT NULL,
-- 	`repo_status`	varchar(100)	NOT NULL	COMMENT '임시저장, 저장, 상신, 상신취소',
-- 	`dept_code`	varchar(100)	NULL,
-- 	`draft_date`	TIMESTAMP	NULL	DEFAULT NOW(),
-- 	`submission_date`	TIMESTAMP	NULL,
-- 	`cancel_comment`	varchar(500)	NULL,
-- 	`cancel_date`	TIMESTAMP	NULL,
-- 	`repo_start_time`	TIMESTAMP	NULL,
-- 	`repo_end_time`	TIMESTAMP	NULL,
-- 	`repo_comp_date`	TIMESTAMP	NULL,
-- 	PRIMARY KEY (`repo_no`),
-- 	FOREIGN KEY (`repo_emp_no`) REFERENCES `Employee` (`emp_no`)
-- );

-- 5. WorkReport 테이블 생성 (업무 보고서)
CREATE TABLE `WorkReport` (
    `repo_no` BIGINT NOT NULL AUTO_INCREMENT,      -- 보고서 번호 
    `repo_title` VARCHAR(255) NOT NULL,            -- 보고서 제목
    `repo_content` TEXT NOT NULL,                  -- 보고서 내용
    `repo_status`	varchar(100)	NOT NULL,
    -- `repo_attach_files` TEXT NULL,                 -- 첨부파일 경로
    `repo_created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 생성일자
	`dept_code`	varchar(100)	NULL,
	`repo_emp_no`	BIGINT	NOT NULL,
	`draft_date`	TIMESTAMP	NULL	DEFAULT NOW(),
	`submission_date`	TIMESTAMP	NULL,
	`cancel_comment`	varchar(500)	NULL,
	`cancel_date`	TIMESTAMP	NULL,
	`repo_start_time`	TIMESTAMP	NULL,
	`repo_end_time`	TIMESTAMP	NULL,
	`repo_comp_date`	TIMESTAMP	NULL,
    PRIMARY KEY (`repo_no`),
FOREIGN KEY (`repo_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- 6. AttendanceReport 테이블 생성 (근태 보고서)
CREATE TABLE `AttendanceReport` (
    `repo_no` VARCHAR(100) NOT NULL AUTO_INCREMENT,             -- 문서 번호
    `report_title` VARCHAR(255) NOT NULL,            -- 기안 제목
    `dept_code` BIGINT NOT NULL,                 -- 부서 번호 (외래키)
    `repo_writer` BIGINT NOT NULL,                   -- 기안자 직원 번호 (외래키)
    `repo_date` DATE NOT NULL,                     -- 기안일
    `repo_status` VARCHAR(50) NOT NULL,          -- 결재 상태
    `vacation_type` VARCHAR(50) NOT NULL,            -- 휴가 종류
    `start_date` DATE NOT NULL,                      -- 휴가 시작일
    `end_date` DATE NOT NULL,                        -- 휴가 종료일
    `annual_leave_days` INT NOT NULL,                -- 연차 일수
    `report_content` TEXT NOT NULL,                  -- 휴가 사유
    `submission_date` DATE NOT NULL,                 -- 상신일
    `repo_comp_date`	TIMESTAMP,                    -- 결재 완료일
    PRIMARY KEY (`report_id`),
    FOREIGN KEY (`dept_code`) REFERENCES `Department` (`dept_code`),  -- 부서 외래키
    FOREIGN KEY (`reporter_no`) REFERENCES `Employee` (`emp_no`),       -- 기안자 외래키
);

-- 7. PurchaseReport 테이블 생성 (구매 보고서)
CREATE TABLE `PurchaseReport` (
    `repo_no` BIGINT NOT NULL AUTO_INCREMENT,      -- 구매 기안 문서 번호
    `repo_title` VARCHAR(255) NOT NULL,            -- 기안 제목
    `repo_writer` BIGINT NOT NULL,                    -- 기안자 직원 번호 (외래키)
    `dept_code` BIGINT NOT NULL,                  -- 부서 번호 (외래키)
    `repo_date` DATE NOT NULL,                     -- 기안일
    `repo_status` VARCHAR(50) NOT NULL DEFAULT 'pending', -- 결재 상태 (예: pending, approved)
    `submission_date` DATE NOT NULL,                 -- 상신일
    `repo_comp_date`	TIMESTAMP,                    -- 결재 완료일
    -- 제품 정보
    `product_name` VARCHAR(255) NOT NULL,             -- 품명
    `specification` VARCHAR(255),                     -- 규격
    `quantity` INT NOT NULL,                          -- 수량
    `unit_price` DECIMAL(10, 2) NOT NULL,             -- 단가
    `total_price` DECIMAL(10, 2) NOT NULL,            -- 총 금액 (수량 * 단가)
    `note` TEXT,                                      -- 비고
    PRIMARY KEY (`request_id`),
    FOREIGN KEY (`reporter_no`) REFERENCES `Employee` (`emp_no`),  -- 기안자 외래키
    FOREIGN KEY (`dept_code`) REFERENCES `Department` (`dept_code`) -- 부서 외래키
);


-- 8. Approver 테이블 생성 (결재자)
CREATE TABLE `Approver` (
	`appr_no`	BIGINT	NOT NULL,
	`appr_repo_no`	BIGINT	NOT NULL,
	`appr_emp_no`	BIGINT	NOT NULL,
	`appr_status`	varchar(100)	NOT NULL	DEFAULT 'pending',
	`appr_date`	TIMESTAMP	NULL,
	`appr_order`	int	NOT NULL	DEFAULT 1,
	PRIMARY KEY (`appr_no`),
	FOREIGN KEY (`appr_repo_no`) REFERENCES `Report` (`repo_no`),
	FOREIGN KEY (`appr_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- 9. Recipient 테이블 생성 (수신자)
CREATE TABLE `Recipient` (
	`reci_no`	BIGINT	NOT NULL,
	`reci_repo_no`	BIGINT	NOT NULL,
	`reci_emp_no`	BIGINT	NOT NULL,
	`reci_dept_no`	BIGINT	NOT NULL,
	`reci_date`	TIMESTAMP	NULL,
	PRIMARY KEY (`reci_no`),
	FOREIGN KEY (`reci_repo_no`) REFERENCES `Report` (`repo_no`),
	FOREIGN KEY (`reci_emp_no`) REFERENCES `Employee` (`emp_no`),
	FOREIGN KEY (`reci_dept_no`) REFERENCES `Department` (`dept_no`)
);

-- 10. Reference 테이블 생성 (참조자)
CREATE TABLE `Reference` (
	`refe_no`	BIGINT	NOT NULL,
	`refe_repo_no`	BIGINT	NOT NULL,
	`refe_emp_no`	BIGINT	NOT NULL,
	`refe_dept_no`	BIGINT	NOT NULL,
	`refe_date`	TIMESTAMP	NULL,
	PRIMARY KEY (`refe_no`),
	FOREIGN KEY (`refe_repo_no`) REFERENCES `Report` (`repo_no`),
	FOREIGN KEY (`refe_emp_no`) REFERENCES `Employee` (`emp_no`),
	FOREIGN KEY (`refe_dept_no`) REFERENCES `Department` (`dept_no`)
);

-- 11. Attachment 테이블 생성 (첨부)
CREATE TABLE `Attachment` (
	`atta_no`	BIGINT	NOT NULL,
	`atta_repo_no`	BIGINT	NULL,
	`atta_email_no`	BIGINT	NULL,
	`atta_content`	varchar(500)	NOT NULL,
	PRIMARY KEY (`atta_no`),
	FOREIGN KEY (`atta_repo_no`) REFERENCES `Report` (`repo_no`)
);

-- 12. Inquiry 테이블 생성 (문의)
CREATE TABLE `Inquiry` (
	`inqu_no`	BIGINT	NOT NULL,
	`inqu_writer`	varchar(100)	NOT NULL,
	`inqu_content`	varchar(500)	NOT NULL,
	`inqu_email`	varchar(100)	NOT NULL,
	`inqu_phone`	varchar(100)	NOT NULL,
	`inqu_enroll_date`	TIMESTAMP	NOT NULL	DEFAULT NOW(),
	PRIMARY KEY (`inqu_no`)
);

-- 13. Scheduler 테이블 생성 (일정)
CREATE TABLE `Scheduler` (
	`sche_no`	BIGINT	NOT NULL,
	`sche_emp_no`	BIGINT	NOT NULL,
	`sche_title`	varchar(300)	NOT NULL,
	`sche_color`	varchar(100)	NULL,
	`sche_start_time`	TIMESTAMP	NOT NULL,
	`sche_end_time`	TIMESTAMP	NOT NULL,
	PRIMARY KEY (`sche_no`),
	FOREIGN KEY (`sche_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- 14. Stock 테이블 생성 (재고)
CREATE TABLE `Stock` (
	`stock_no`	BIGINT	NOT NULL,
	`stock_comp_no`	BIGINT	NOT NULL,
	`stock_name`	varchar(300)	NOT NULL,
	`stock_category`	varchar(100)	NOT NULL,
	`stock_amount`	INT	NOT NULL	DEFAULT 0,
	PRIMARY KEY (`stock_no`),
	FOREIGN KEY (`stock_comp_no`) REFERENCES `Company` (`comp_no`)
);

-- 15. Emailmessage 테이블 생성 (이메일메시지)
CREATE TABLE `Emailmessage` (
	`email_no`	BIGINT	NOT NULL,
	`email_writer`	BIGINT	NOT NULL,
	`email_content`	varchar(500)	NOT NULL,
	`email_recipient`	BIGINT	NOT NULL,
	`email_status`	varchar(100)	NOT NULL	DEFAULT 'unread',
	`email_send_date`	TIMESTAMP	NOT NULL	DEFAULT NOW(),
	PRIMARY KEY (`email_no`),
	FOREIGN KEY (`email_writer`) REFERENCES `Employee` (`emp_no`),
	FOREIGN KEY (`email_recipient`) REFERENCES `Employee` (`emp_no`)
);



-- Company 테이블 생성
=======
-- 7. Report 테이블 삭제
DROP TABLE IF EXISTS `AttendanceReport`;

-- 8. Report 테이블 삭제
DROP TABLE IF EXISTS `WorkReport`;

-- 9. Inquiry 테이블 삭제
DROP TABLE IF EXISTS `Inquiry`;

-- 10. Stock 테이블 삭제
DROP TABLE IF EXISTS `Stock`;

-- 11. Emailmessage 테이블 삭제
DROP TABLE IF EXISTS `Emailmessage`;

-- 12. Employee 테이블 삭제
DROP TABLE IF EXISTS `Employee`;

-- 13. Position 테이블 삭제
DROP TABLE IF EXISTS `Position`;

-- 14. Department 테이블 삭제
DROP TABLE IF EXISTS `Department`;

-- 15. Company 테이블 삭제
DROP TABLE IF EXISTS `Company`;


-- 1. Company 테이블 생성 (기업 정보)

CREATE TABLE `Company` (
	`comp_no` BIGINT NOT NULL AUTO_INCREMENT,
	`comp_name` varchar(300) NOT NULL,
	`comp_industry` varchar(100) NOT NULL,
	`comp_requester` varchar(100) NOT NULL COMMENT '담당자',
	`comp_email` varchar(300) NOT NULL COMMENT '담당자 이메일',
	`comp_phone` varchar(100) NOT NULL COMMENT '담당자 번호',
	`comp_headcount` INT NOT NULL DEFAULT 0 COMMENT '예상 인원 수',
	PRIMARY KEY (`comp_no`)
);

-- Department 테이블 생성
CREATE TABLE `Department` (
	`dept_no` BIGINT NOT NULL,
	`dept_name` varchar(100) NOT NULL,
	`dept_team_name` VARCHAR(100) NOT NULL,
	PRIMARY KEY (`dept_no`)
);

-- Position 테이블 생성
CREATE TABLE `Position` (
	`posi_no` BIGINT NOT NULL AUTO_INCREMENT,
	`posi_name` varchar(100) NOT NULL,
	PRIMARY KEY (`posi_no`)
);

-- Employee 테이블 생성
CREATE TABLE `Employee` (
	`empNo` BIGINT NOT NULL AUTO_INCREMENT,
	`empCode` varchar(100) NOT NULL,
	`empPw` varchar(100) NOT NULL,
	`empName` varchar(100) NOT NULL,
	`empEmail` varchar(300) NOT NULL,
	`empPhone` varchar(100) NOT NULL,
	`empSign` varchar(100) NULL,
	`empProfile` varchar(300) NULL,
	`empCompNo` BIGINT NOT NULL COMMENT 'comp_no',
	`empDeptNo` BIGINT NOT NULL COMMENT 'dept_no',
	`empPosiNo` BIGINT NOT NULL COMMENT 'posi_no',
	`empEnrollDate` TIMESTAMP NOT NULL DEFAULT NOW(),
	`empJoinDate` TIMESTAMP NOT NULL,
	`empLastMsg` varchar(100) NULL,
	`empLastEmailMsg` varchar(100) NULL,
	`empRole` varchar(100) NOT NULL DEFAULT 'user' COMMENT 'sys_admin, comp_admin, user',
	PRIMARY KEY (`empNo`),
	FOREIGN KEY (`empCompNo`) REFERENCES `Company` (`comp_no`),
	FOREIGN KEY (`empDeptNo`) REFERENCES `Department` (`dept_no`),
	FOREIGN KEY (`empPosiNo`) REFERENCES `Position` (`posi_no`)
);

-- Report 테이블 생성
CREATE TABLE `Report` (
	`repo_no` BIGINT NOT NULL AUTO_INCREMENT,
	`repo_emp_no` BIGINT NOT NULL COMMENT 'emp_no',
	`repo_title` varchar(300) NOT NULL,
	`repo_content` varchar(500) NOT NULL,
	`repo_type` varchar(100) NOT NULL,
	`repo_status` varchar(100) NOT NULL COMMENT '임시저장, 저장, 상신, 상신취소',
	`dept_code` varchar(100) NULL,
	`draft_date` TIMESTAMP NULL DEFAULT NOW(),
	`submission_date` TIMESTAMP NULL,
	`cancel_date` TIMESTAMP NULL,
	`repo_start_time` TIMESTAMP NULL,
	`repo_end_time` TIMESTAMP NULL,
	PRIMARY KEY (`repo_no`),
	FOREIGN KEY (`repo_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- Attachment 테이블 생성
CREATE TABLE `Attachment` (
	`atta_no` BIGINT NOT NULL AUTO_INCREMENT,
	`atta_repo_no` BIGINT NULL COMMENT 'repo_no',
	`atta_email_no` BIGINT NULL COMMENT 'email_no',
	`atta_content` varchar(500) NOT NULL,
	PRIMARY KEY (`atta_no`),
	FOREIGN KEY (`atta_repo_no`) REFERENCES `Report` (`repo_no`)
);

-- Approver 테이블 생성
CREATE TABLE `Approver` (
	`appr_no` BIGINT NOT NULL AUTO_INCREMENT,
	`appr_repo_no` BIGINT NOT NULL COMMENT 'repo_no',
	`appr_emp_no` BIGINT NOT NULL COMMENT 'emp_no',
	`appr_status` varchar(100) NOT NULL DEFAULT 'wait' COMMENT 'wait(결재 전), approval(결재 후)',
	`appr_date` TIMESTAMP NULL,
	PRIMARY KEY (`appr_no`),
	FOREIGN KEY (`appr_repo_no`) REFERENCES `Report` (`repo_no`),
	FOREIGN KEY (`appr_emp_no`) REFERENCES `Employee` (`emp_no`)
);

ALTER TABLE `Approver` ADD `appr_order` INT NOT NULL COMMENT '결재 순서';
ALTER TABLE `Approver` ADD `appr_due_date` TIMESTAMP NOT NULL COMMENT '결재 기한';


-- Reference 테이블 생성
CREATE TABLE `Reference` (
	`refe_no` BIGINT NOT NULL AUTO_INCREMENT,
	`refe_repo_no` BIGINT NOT NULL COMMENT 'repo_no',
	`refe_emp_no` BIGINT NOT NULL COMMENT 'emp_no',
	`refe_dept_no` BIGINT NOT NULL COMMENT 'dept_no',
	`refe_date` TIMESTAMP NULL,
	PRIMARY KEY (`refe_no`),
	FOREIGN KEY (`refe_repo_no`) REFERENCES `Report` (`repo_no`),
	FOREIGN KEY (`refe_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- Recipient 테이블 생성
CREATE TABLE `Recipient` (
	`reci_no` BIGINT NOT NULL AUTO_INCREMENT,
	`reci_repo_no` BIGINT NOT NULL COMMENT 'repo_no',
	`reci_emp_no` BIGINT NOT NULL COMMENT 'emp_no',
	`reci_dept_no` BIGINT NOT NULL COMMENT 'dept_no',
	`reci_date` TIMESTAMP NULL,
	PRIMARY KEY (`reci_no`),
	FOREIGN KEY (`reci_repo_no`) REFERENCES `Report` (`repo_no`),
	FOREIGN KEY (`reci_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- Scheduler 테이블 생성
CREATE TABLE `Scheduler` (
	`sche_no` BIGINT NOT NULL AUTO_INCREMENT,
	`sche_emp_no` BIGINT NOT NULL COMMENT 'emp_no',
	`sche_title` varchar(300) NOT NULL,
	`sche_color` varchar(100) NULL,
	`sche_start_time` TIMESTAMP NOT NULL,
	`sche_end_time` TIMESTAMP NOT NULL,
	PRIMARY KEY (`sche_no`),
	FOREIGN KEY (`sche_emp_no`) REFERENCES `Employee` (`emp_no`)
);

-- company/기업
INSERT INTO `Company` (`comp_name`, `comp_industry`, `comp_requester`, `comp_email`, `comp_phone`, `comp_headcount`)
VALUES 
('Digitalsolution', '소프트웨어 개발', '김성현', 'kim@digitalsolution.com', '010-1234-5678', 50),
('Nextware', '클라우드 서비스', '이지수', 'lee@nextware.co.kr', '010-8765-4321', 120),
('Itmate', '네트워크 장비', '박진영', 'park@itmate.net', '010-2468-1357', 80),
('Futuretech', '하드웨어 부품', '송민우', 'song@futuretech.co.kr', '010-9753-8642', 60),
('Paperless', '데이터센터 운영', '이범상', 'beom@paperless.com', '010-1357-2468', 150);


-- department/부서
INSERT INTO `Department` (`dept_no`, `dept_name`, `dept_team_name`)
VALUES 
    (100, 'IT부서', '개발팀'),
    (110, 'IT부서', '인프라팀'),
    (200, '마케팅부서', '디지털마케팅팀'),
    (210, '마케팅부서', '브랜드팀'),
    (300, '영업부서', '국내영업팀'),
    (310, '영업부서', '해외영업팀'),
    (400, 'HR부서', '채용팀'),
    (410, 'HR부서', '인사관리팀'),
    (500, '구매부서', '구매팀'),
    (510, '구매부서', '자재관리팀');

-- position/직급
INSERT INTO `Position` (`posi_name`)
VALUES
    ('사원'),
    ('주임'),
    ('대리'),
    ('과장'),
    ('차장'),
    ('부장'),
    ('이사'),
    ('상무'),
    ('전무'),
    ('부사장'),
    ('사장');

-- employee/직원
INSERT INTO `Employee` (`empCode`, `empPw`, `empName`, `empEmail`, `empPhone`, `empSign`, `empProfile`, `empCompNo`, `empDeptNo`, `empPosiNo`, `empJoinDate`, `empRole`)
VALUES

-- (digitalsolution 대표)
('admin2', '$2a$10$Miv1rC.Z5l1z4UREbKskx.Y3rgd/r5cWKD5csJWjCCQvt8ukQp5cC', '김성현', 'kim@digitalsolution.com', '010-1234-5678', '김성현 서명', 'https://via.placeholder.com/60', 1, 210, 7, '2019-11-01', 'admin'),
('DS1001', 'password123', '배수지', 'suzy@digitalsolution.com', '010-1234-5678', '배수지 서명', 'https://via.placeholder.com/60', 1, 100, 4, '2021-05-12', 'user'),  
('DS1002', 'password123', '강동원', 'dongwon@digitalsolution.com', '010-8765-4321', '강동원 서명', 'https://via.placeholder.com/60', 1, 100, 6, '2020-09-15', 'user'),  
('DS1003', 'password123', '김태리', 'taeri@digitalsolution.com', '010-2345-6789', '김태리 서명', 'https://via.placeholder.com/60', 1, 500, 3, '2019-04-10', 'user'),  
('DS1004', 'password123', '이준호', 'junho@digitalsolution.com', '010-3456-7890', '이준호 서명', 'https://via.placeholder.com/60', 1, 110, 4, '2020-01-20', 'user'),
('DS1005', 'password123', '박서준', 'seojun@digitalsolution.com', '010-5555-1234', '박서준 서명', 'https://via.placeholder.com/60', 1, 200, 3, '2021-07-30', 'user');  

INSERT INTO `Employee` (`empCode`, `empPw`, `empName`, `empEmail`, `empPhone`, `empSign`, `empProfile`, `empCompNo`, `empDeptNo`, `empPosiNo`, `empJoinDate`, `empRole`)
VALUES
-- (nextware 대표)
('NW1000', 'password123', '이지수', 'lee@nextware.co.kr', '010-8765-4321', '이지수 서명', 'https://via.placeholder.com/60', 2, 210, 10, '2019-03-10', 'admin'),  
('NW1001', 'password123', '장원영', 'wonyoung@nextware.co.kr', '010-1234-5678', '장원영 서명', 'https://via.placeholder.com/60', 2, 100, 3, '2020-05-15', 'user'),  
('NW1002', 'password123', '김우석', 'wooseok@nextware.co.kr', '010-2345-6789', '김우석 서명', 'https://via.placeholder.com/60', 2, 100, 4, '2019-08-22', 'user'),  
('NW1003', 'password123', '차은우', 'eunwoo@nextware.co.kr', '010-3456-7890', '차은우 서명', 'https://via.placeholder.com/60', 2, 110, 2, '2021-02-05', 'user'), 
('NW1004', 'password123', '도경수', 'kyungsoo@nextware.co.kr', '010-4567-8901', '도경수 서명', 'https://via.placeholder.com/60', 2, 110, 6, '2018-09-12', 'user'),  
('NW1005', 'password123', '전지현', 'jihyun@nextware.co.kr', '010-5678-9012', '전지현 서명', 'https://via.placeholder.com/60', 2, 200, 3, '2021-05-25', 'user');  

INSERT INTO `Employee` (`empCode`, `empPw`, `empName`, `empEmail`, `empPhone`, `empSign`, `empProfile`, `empCompNo`, `empDeptNo`, `empPosiNo`, `empJoinDate`, `empRole`)
VALUES
-- (itmate 대표)
('ITM1000', 'password123', '박진영', 'park@itmate.net', '010-2468-1357', '박진영 서명', 'https://via.placeholder.com/60', 3, 300, 10, '2018-07-22', 'admin'),
('ITM1001', 'password123', '이준기', 'junki@itmate.net', '010-1111-1234', '이준기 서명', 'https://via.placeholder.com/60', 3, 100, 3, '2021-06-10', 'user'),  
('ITM1002', 'password123', '이하늬', 'hani@itmate.net', '010-2222-2345', '이하늬 서명', 'https://via.placeholder.com/60', 3, 100, 4, '2019-10-20', 'user'), 
('ITM1003', 'password123', '안보현', 'bohyun@itmate.net', '010-3333-3456', '안보현 서명', 'https://via.placeholder.com/60', 3, 110, 2, '2020-01-05', 'user'), 
('ITM1004', 'password123', '박보검', 'bogum@itmate.net', '010-4444-4567', '박보검 서명', 'https://via.placeholder.com/60', 3, 110, 6, '2018-12-15', 'user'), 
('ITM1005', 'password123', '김우빈', 'woobin@itmate.net', '010-5555-5678', '김우빈 서명', 'https://via.placeholder.com/60', 3, 300, 3, '2021-03-01', 'user');


INSERT INTO `Employee` (`empCode`, `empPw`, `empName`, `empEmail`, `empPhone`, `empSign`, `empProfile`, `empCompNo`, `empDeptNo`, `empPosiNo`, `empJoinDate`, `empRole`)
VALUES
-- (futuretech 대표)
('FT1000', 'password123', '송민우', 'song@futuretech.co.kr', '010-9753-8642', '송민우 서명', 'https://via.placeholder.com/60', 4, 500, 10, '2021-05-30', 'admin'),
('FT1001', 'password123', '한소희', 'sohee@futuretech.co.kr', '010-1234-5678', '한소희 서명', 'https://via.placeholder.com/60', 4, 100, 3, '2021-03-10', 'user'), 
('FT1002', 'password123', '정해인', 'haein@futuretech.co.kr', '010-2345-6789', '정해인 서명', 'https://via.placeholder.com/60', 4, 100, 4, '2020-07-25', 'user'), 
('FT1003', 'password123', '박보검', 'bogum@futuretech.co.kr', '010-3456-7890', '박보검 서명', 'https://via.placeholder.com/60', 4, 110, 2, '2019-12-15', 'user'),  
('FT1004', 'password123', '남주혁', 'juhyuk@futuretech.co.kr', '010-4567-8901', '남주혁 서명', 'https://via.placeholder.com/60', 4, 110, 6, '2018-05-10', 'user'),  
('FT1005', 'password123', '김고은', 'goeun@futuretech.co.kr', '010-5678-9012', '김고은 서명', 'https://via.placeholder.com/60', 4, 500, 3, '2021-01-20', 'user');

INSERT INTO `Employee` (`empCode`, `empPw`, `empName`, `empEmail`, `empPhone`, `empSign`, `empProfile`, `empCompNo`, `empDeptNo`, `empPosiNo`, `empJoinDate`, `empRole`)
VALUES
-- (Paperless 대표)
('PL1000', 'password123', '이범상', 'beom@paperless.com', '010-1357-2468', '이범상 서명', 'https://via.placeholder.com/60', 5, 410, 10, '2019-03-10', 'admin'),
('PL1001', 'password123', '김다미', 'dami@paperless.com', '010-1234-5678', '김다미 서명', 'https://via.placeholder.com/60', 5, 100, 3, '2021-05-12', 'user'),  
('PL1002', 'password123', '이도현', 'dohyun@paperless.com', '010-2345-6789', '이도현 서명', 'https://via.placeholder.com/60', 5, 100, 4, '2019-08-22', 'user'), 
('PL1003', 'password123', '최수빈', 'subin@paperless.com', '010-3456-7890', '최수빈 서명', 'https://via.placeholder.com/60', 5, 500, 2, '2020-02-10', 'user'),  
('PL1004', 'password123', '이유미', 'yumi@paperless.com', '010-4567-8901', '이유미 서명', 'https://via.placeholder.com/60', 5, 500, 6, '2018-05-01', 'user'),  
('PL1005', 'password123', '나인우', 'inwoo@paperless.com', '010-5678-9012', '나인우 서명', 'https://via.placeholder.com/60', 5, 410, 3, '2021-01-15', 'user');



-- 15. Emailmessage 테이블 생성 (이메일메시지)
CREATE TABLE `Emailmessage` (
	`email_no`	BIGINT	NOT NULL,
	`email_writer`	BIGINT	NOT NULL,
	`email_content`	varchar(500)	NOT NULL,
	`email_recipient`	BIGINT	NOT NULL,
	`email_status`	varchar(100)	NOT NULL	DEFAULT 'unread',
	`email_send_date`	TIMESTAMP	NOT NULL	DEFAULT NOW(),
	PRIMARY KEY (`email_no`),
	FOREIGN KEY (`email_writer`) REFERENCES `Employee` (`emp_no`),
	FOREIGN KEY (`email_recipient`) REFERENCES `Employee` (`emp_no`)
);


