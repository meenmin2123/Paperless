import React, { useState, useRef } from 'react'
import { Table, Button, Form, Row, Col, Modal } from 'react-bootstrap';
import styles from '../../styles/company/admin/company_member.module.css';
import Menubar from '../layout/menubar';
import OrgChart from '../layout/org_chart';

function CompanyAdminMember() {
    const [showAddModal, setShowAddModal] = useState(false); // ÏßÅÏõê Ï∂îÍ∞Ä Î™®Îã¨ ÏÉÅÌÉú
    const [showEditModal, setShowEditModal] = useState(false); // ÏßÅÏõê ÏàòÏ†ï Î™®Îã¨ ÏÉÅÌÉú
    const [selectedEmployee, setSelectedEmployee] = useState(null); // ÏàòÏ†ïÌï† ÏßÅÏõê Ï†ïÎ≥¥
    const [position, setPosition] = useState(''); // ÏßÅÍ∏â ÏÉÅÌÉú Í¥ÄÎ¶¨
    const orgChartRef = useRef(null); // orgChart Ïª¥Ìè¨ÎÑåÌä∏Î•º Ï∞∏Ï°∞Ìï† ref ÏÉùÏÑ±
    const [searchCategory, setSearchCategory] = useState('name'); // Í≤ÄÏÉâ Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ†ÌÉù ÏÉÅÌÉú

    // Í≤ÄÏÉâ Ïπ¥ÌÖåÍ≥†Î¶¨ Î≥ÄÍ≤Ω Ìï∏Îì§Îü¨
    const handleCategoryChange = (e) => {
        setSearchCategory(e.target.value);
    };
    // ÏßÅÏõê Ï†ÑÏ≤¥ ÏÑ†ÌÉù Ï≤¥ÌÅ¨Î∞ïÏä§ ÏÉÅÌÉú Í¥ÄÎ¶¨
    const [isAllSelected, setIsAllSelected] = useState(false);
    const [selectedEmployees, setSelectedEmployees] = useState([]); // ÏÑ†ÌÉùÎêú ÏßÅÏõê Î™©Î°ù
    const handleSearchSubmit = (e) => {
        e.preventDefault();
        // Í≤ÄÏÉâ Î°úÏßÅ Ï≤òÎ¶¨
        console.log(`Search by: ${searchCategory}`);
    };

    // ÏßÅÏõê Ï∂îÍ∞Ä Î™®Îã¨ Ïó¥Í∏∞/Îã´Í∏∞
    const handleShowAddModal = () => setShowAddModal(true);
    const handleCloseAddModal = () => setShowAddModal(false);

    // ÏßÅÏõê ÏàòÏ†ï Î™®Îã¨ Ïó¥Í∏∞/Îã´Í∏∞
    const handleShowEditModal = (employee) => {
        setSelectedEmployee(employee); // ÏÑ†ÌÉùÎêú ÏßÅÏõê Ï†ïÎ≥¥ Ï†ÄÏû•
        setPosition(employee.position); // Í∏∞Ï°¥ ÏßÅÍ∏âÏùÑ ÏÑ†ÌÉùÎêú Í∞íÏúºÎ°ú ÏÑ§Ï†ï
        setShowEditModal(true);
    };
    const handleCloseEditModal = () => setShowEditModal(false);

    // ÏßÅÏõê Ï∂îÍ∞Ä/ÏàòÏ†ï Ìèº Ï≤òÎ¶¨
    const handleFormSubmit = (e) => {
        e.preventDefault();
        // ÏßÅÏõê Ï∂îÍ∞Ä ÎòêÎäî ÏàòÏ†ï Î°úÏßÅ Ï≤òÎ¶¨
        handleCloseAddModal();
        handleCloseEditModal();
    };

    const [employeeData, setEmployeeData] = useState([
        { id: 'PL1000', department: 'Í≤ΩÏòÅÏßÄÏõê', team: 'Í≤ΩÏòÅÏßÄÏõêÌåÄ', name: 'Ïù¥Î≤îÏÉÅ', email: 'beom@paperless.com', position: 'ÏÇ¨Ïû•' },
        { id: 'PL1001', department: 'ÎßàÏºÄÌåÖ', team: 'ÎßàÏºÄÌåÖÌåÄ', name: 'ÍπÄÎã§ÎØ∏', email: 'dami@paperless.com', position: 'ÏÇ¨Ïõê' },
        { id: 'PL1002', department: 'ÎßàÏºÄÌåÖ', team: 'ÎßàÏºÄÌåÖÌåÄ', name: 'Ïù¥ÎèÑÌòÑ', email: 'dohyun@paperless.com', position: 'Ï£ºÏûÑ' },
        { id: 'PL1003', department: 'Í∏∞Ìöç', team: 'Í∏∞ÌöçÌåÄ', name: 'ÏµúÏàòÎπà', email: 'subin@paperless.com', position: 'Í≥ºÏû•' },
        { id: 'PL1004', department: 'Í∏∞Ìöç', team: 'Í∏∞ÌöçÌåÄ', name: 'Ïù¥Ïú†ÎØ∏', email: 'yumi@paperless.com', position: 'Ï∞®Ïû•' },
        { id: 'PL1005', department: 'Í≤ΩÏòÅÏßÄÏõê', team: 'Í≤ΩÏòÅÏßÄÏõêÌåÄ', name: 'ÎÇòÏù∏Ïö∞', email: 'inwoo@paperless.com', position: 'ÎåÄÎ¶¨' },
        { id: 'PL1006', department: 'Í≤ΩÏòÅÏßÄÏõê', team: 'Í≤ΩÏòÅÏßÄÏõêÌåÄ', name: 'Î∞ïÏßÄÌõà', email: 'jihoon@paperless.com', position: 'Ï∞®Ïû•' },
        { id: 'PL1007', department: 'Í∏∞Ìöç', team: 'Í∏∞ÌöçÌåÄ', name: 'ÏûÑÏú§ÏïÑ', email: 'yoona@paperless.com', position: 'Í≥ºÏû•' },
        { id: 'PL1008', department: 'ÎßàÏºÄÌåÖ', team: 'ÎßàÏºÄÌåÖÌåÄ', name: 'Ïù¥ÏÑ±Í≤Ω', email: 'seong@paperless.com', position: 'Ï£ºÏûÑ' },
        { id: 'PL1009', department: 'Í∏∞Ìöç', team: 'Í∏∞ÌöçÌåÄ', name: 'Ï†ïÍ≤ΩÌò∏', email: 'kyungho@paperless.com', position: 'ÎåÄÎ¶¨' },
        { id: 'PL1010', department: 'Í≤ΩÏòÅÏßÄÏõê', team: 'Í≤ΩÏòÅÏßÄÏõêÌåÄ', name: 'ÍπÄÏßÄÏõê', email: 'jiwon@paperless.com', position: 'ÎåÄÎ¶¨' },
    ]);


    // Ï†ÑÏ≤¥ ÏÑ†ÌÉù Ï≤¥ÌÅ¨Î∞ïÏä§ ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨
    const handleSelectAll = () => {
        if (!isAllSelected) {
            // Ï†ÑÏ≤¥ Ï≤¥ÌÅ¨Î∞ïÏä§Î•º ÏÑ†ÌÉùÌïòÎ©¥ Î™®Îì† ÏßÅÏõê ÏÑ†ÌÉù
            setSelectedEmployees(employeeData.map(employee => employee.id));
        } else {
            // Ï†ÑÏ≤¥ Ï≤¥ÌÅ¨Î∞ïÏä§Í∞Ä Ìï¥Ï†úÎêòÎ©¥ Î™®Îì† ÏßÅÏõê ÏÑ†ÌÉù Ìï¥Ï†ú
            setSelectedEmployees([]);
        }
        setIsAllSelected(!isAllSelected);
    };

    // Í∞úÎ≥Ñ Ï≤¥ÌÅ¨Î∞ïÏä§ ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨
    const handleEmployeeSelect = (id) => {
        if (selectedEmployees.includes(id)) {
            setSelectedEmployees(selectedEmployees.filter(empId => empId !== id)); // Ïù¥ÎØ∏ ÏÑ†ÌÉùÎêú Í≤ΩÏö∞ Ìï¥Ï†ú
        } else {
            setSelectedEmployees([...selectedEmployees, id]); // ÏÑ†ÌÉùÎêòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ Ï∂îÍ∞Ä
        }
    };

    const handleInputChange = (e, id, field) => {
        const newValue = e.target.value;
        setEmployeeData((prevData) =>
            prevData.map((item) =>
                item.id === id ? { ...item, [field]: newValue } : item
            )
        );
    };

    // const handleUpdate = async (id) => {
    //     const updatedItem = employeeData.find((item) => item.id === id);
    //     console.log("Updated item:", updatedItem);

    //     try {
    //         const response = await fetch(`/api/updateMember/${id}`, {
    //             method: 'PUT',
    //             headers: {
    //                 'Content-Type': 'application/json',
    //             },
    //             body: JSON.stringify(updatedItem),
    //         });

    //         // ÌÜµÏã† ÏóêÎü¨ Î∞úÏÉù Ïãú
    //         if (!response.ok) {
    //             throw new Error('Network response was not ok');
    //         }

    //         const data = await response.json();
    //         console.log("ServerÏóêÏÑú Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞ :", data);

    //         alert(`ÏßÅÏõê ${id}Ïù¥(Í∞Ä) ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§.`);

    //     } catch (error) {
    //         console.error("Error updating item:", error);
    //         alert("ÏóÖÎç∞Ïù¥Ìä∏ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
    //     }
    // };

    // Î™®Îì† ÎìúÎ°≠Îã§Ïö¥ÏùÑ Îã´Îäî Ìï®Ïàò
    const closeAllDropdowns = () => {
        if (orgChartRef.current) {
            orgChartRef.current.closeAllDropdowns(); // closeAllDropdowns Ìò∏Ï∂ú
        }
    };

    return (
        <div className="container-xl">
            <Menubar />

            <div className={styles.titleBox}>
                <div className={styles.title}>
                    <h1 className={styles.pageTitle}>ÏßÅÏõê Í¥ÄÎ¶¨</h1>
                    <p className={styles.memberCount}>üßë‚Äçüíº 10</p>
                </div>
            </div>

            <div className={styles.content}>
                <div className={styles.formBox}>
                    <Form inline>
                        <Button variant="primary" className={styles.insertBtn} onClick={handleShowAddModal}>ÏßÅÏõê Ï∂îÍ∞Ä</Button>
                        <Button variant="primary" className={styles.deleteBtn}>ÏßÅÏõê ÏÇ≠Ï†ú</Button>
                    </Form>

                    <Form inline className={styles.sreachFormBox} onSubmit={handleSearchSubmit}>
                        <Row>
                            <Col xs="auto">
                                {/* Í≤ÄÏÉâ Ïπ¥ÌÖåÍ≥†Î¶¨ ÎìúÎ°≠Îã§Ïö¥ */}
                                <Form.Select
                                    value={searchCategory}
                                    onChange={handleCategoryChange}
                                    className={styles.searchSelect}
                                >
                                    <option value="name">ÏßÅÏõêÎ™Ö</option>
                                    <option value="email">Ïù¥Î©îÏùº</option>
                                    <option value="department">ÏÜåÏÜç Î≥∏Î∂Ä</option>
                                    <option value="position">ÏßÅÍ∏â</option>
                                </Form.Select>
                            </Col>
                            <Col xs="auto">
                                <Form.Control
                                    type="text"
                                    placeholder="Search"
                                    className="mr-sm-2"
                                />
                            </Col>
                            <Col xs="auto">
                                <Button type="submit" className={styles.sreachBtn}>Í≤ÄÏÉâ</Button>
                            </Col>
                        </Row>
                    </Form>
                </div>
                <Table bordered className={styles.contentTable}>
                    <thead>
                        <tr>
                            <th className={styles.productChartCol}>Ï°∞ÏßÅÎèÑ</th>
                            <th className={styles.productListCol}>ÏßÅÏõê Î™©Î°ù</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th className={styles.productChartCol}>
                                <div className={styles.orgChartBox}>
                                    <div className={styles.dropdownCloseBtnBox}>
                                        <Button className={styles.dropdownCloseBtn} onClick={closeAllDropdowns}> Î™®Îëê Îã´Í∏∞</Button>
                                    </div>
                                    <OrgChart className={styles.orgChart} ref={orgChartRef} />
                                </div>
                            </th>
                            <th className={styles.productListCol}>
                                <div className={styles.productTableBox}>
                                    <Table bordered className={styles.memberTable}>
                                        <thead>
                                            <tr>
                                                <th>
                                                    <input type='checkbox'
                                                        className={styles.inputCheckBox}
                                                        onChange={handleSelectAll}
                                                        checked={isAllSelected} />
                                                </th>
                                                <th>ÏÜåÏÜç Î≥∏Î∂Ä</th>
                                                <th>ÏÜåÏÜç Î∂ÄÏÑú</th>
                                                <th>ÏßÅÏõêÎ™Ö</th>
                                                <th className={styles.userEmail}>Ïù¥Î©îÏùº</th>
                                                <th>ÏßÅÍ∏â</th>
                                                <th className={styles.updateBtnCol}></th>
                                            </tr>
                                        </thead>
                                        <tbody className={styles.tableBody}>
                                            {employeeData.map((employee) => (
                                                <tr key={employee.id}>
                                                    <th><input
                                                        type='checkbox'
                                                        checked={selectedEmployees.includes(employee.id)}
                                                        onChange={() => handleEmployeeSelect(employee.id)}
                                                    />
                                                    </th>
                                                    <td>{employee.department}</td>
                                                    <td>{employee.team}</td>
                                                    <td>{employee.name}</td>
                                                    <td>{employee.email}</td>
                                                    <td>{employee.position}</td>
                                                    <td>
                                                        {/* <Button
                                                            variant="primary"
                                                            className={styles.updateBtn}
                                                            onClick={() => handleUpdate(employee.id)}
                                                        >
                                                            ÏàòÏ†ï
                                                        </Button> */}
                                                    </td>
                                                </tr>
                                            ))}
                                        </tbody>
                                    </Table>
                                </div>
                            </th>
                        </tr>
                    </tbody>
                </Table>
                {/* content */}
            </div>

        </div>
    );
}

export default CompanyAdminMember;
