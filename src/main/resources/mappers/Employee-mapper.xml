<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 풀 패키지명을 namespace작성한다 그래야지만 mapper 인터페이스에서 함수 호출시 매핑해서 sql을 실행할 수 있다. -->
<mapper namespace="com.ss.paperless.employee.EmployeeMapper">
	<select id="getEmpInfo"
		parameterType="String"
		resultType="com.ss.paperless.employee.EmployeeDTO">
		select * from employee where emp_code = #{emp_code}
	</select>
	<select id="EmployeeById"
    parameterType="com.ss.paperless.employee.LoginDTO"
    resultType="com.ss.paperless.employee.EmployeeDTO">
    SELECT e.*, r.role_name
    FROM employee e
    LEFT JOIN employee_roles r ON e.emp_code = r.emp_code
    WHERE e.emp_code = #{username}
	</select>
	<select id="getUserPosi" parameterType="String"
		resultType="String">
		select posi_name from position join employee on position.posi_no = employee.emp_posi_no where employee.emp_code = #{emp_code};
	</select>
	<select id="existsByUsername" parameterType="String"
		resultType="int">
		SELECT EXISTS (
		SELECT 1
		FROM `User`
		WHERE `username` = '입력할_사용자이름'
		) AS user_exists
	</select>
	<select id="GetAdminUsers" 
		resultType="com.ss.paperless.employee.AdminEmpGetVo">
		select e.emp_no,e.emp_code,e.emp_name,e.emp_enroll_date,c.comp_name,c.comp_email,c.comp_phone,c.comp_headcount
		from employee e join company c on e.emp_comp_no = c.comp_no where e.emp_role = 'admin'
	</select>
	<update id="updateEmp" parameterType="Long">
		UPDATE Employee
		SET column_name = new_value
		WHERE id = #{id}
	</update>
</mapper>